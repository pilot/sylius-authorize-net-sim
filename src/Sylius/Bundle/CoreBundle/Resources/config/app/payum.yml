payum:
    storages:
        Sylius\Component\Core\Model\Order: { doctrine: orm }
        Sylius\Component\Core\Model\Payment: { doctrine: orm }

    security:
        token_storage:
            Sylius\Bundle\PayumBundle\Model\PaymentSecurityToken: { doctrine: orm }

    contexts:
        paypal_express_checkout:
            paypal_express_checkout_nvp:
                username:  %paypal.express_checkout.username%
                password:  %paypal.express_checkout.password%
                signature: %paypal.express_checkout.signature%
                sandbox:   %paypal.express_checkout.sandbox%

        authorize_aim:
            authorize_net_aim:
                login_id: %authorize.apiLoginId%
                transaction_key: %authorize.transactionKey%
                sandbox: %payum.test_mode%

        authorize_net_sim:
            authorize_net_sim:
                options:
                    login_id: %authorize.apiLoginId%
                    transaction_key: %authorize.transactionKey%
                    sandbox: %payum.test_mode%
                actions:
                    - sylius.payum.action.payment_status
                    - store.authorize_net_sim.action.payment_status
                    - store.authorize_net_sim.action.fill_order_details
                    - store.authorize_net_sim.action.capture_onsite
                    - store.authorize_net_sim.action.notify

        payment_sense:
            payment_sense:
                options:
                    merchant_id: %payment_sense.merchantId%
                    password: %payment_sense.password%
                    pre_shared_key: %payment_sense.preSharedKey%
                    sandbox: %payum.test_mode%
                actions:
                    - sylius.payum.action.payment_status
                    - store.payment_sense.action.payment_status
                    - store.payment_sense.action.fill_order_details
                    - store.payment_sense.action.capture_onsite
                    - store.payment_sense.action.notify

        stripe:
            omnipay:
                type: Stripe
                options:
                    apiKey:   %stripe.secret_key%
                    testMode: %stripe.test_mode%

        be2bill:
            be2bill:
                identifier: %be2bill.identifier%
                password:   %be2bill.password%
                sandbox:    %be2bill.sandbox%

        be2bill_onsite:
            be2bill_onsite:
                identifier: %be2bill.identifier%
                password:   %be2bill.password%
                sandbox:    %be2bill.sandbox%

        stripe_checkout:
            stripe_checkout:
                publishable_key: %stripe.publishable_key%
                secret_key: %stripe.secret_key%

        dummy:
            custom:
                actions:
                    - sylius.payum.dummy.action.capture_payment
                    - sylius.payum.dummy.action.payment_status
